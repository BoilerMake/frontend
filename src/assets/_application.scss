.app-heading {
  text-align: right;
  color: $pink;
  padding: 30px 0;
}
.application {
  background: none;
  .text-input {
    width: 100%;
    padding: 15px 20px;
    box-sizing: border-box;
    outline: none;
    border-radius: 8px;
    border: 2px solid $lightGray;
    margin-top: 8px;
    font-size: 14px;

    &:focus {
      border: 2px solid $darkBlue;
    }

    &:disabled {
      color: $lightGray;
    }
  }
  .last-check {
    display: inline;
    margin-top: -30px;
    margin-left: 55px;
  }
  .last-check-s {
    @media screen and (max-width:375px) {
      display: inline;
      margin-top: -30px;
      margin-left: 55px;
    }
  }
  .application-button {
    width: 100%;
    padding: 15px 20px;
    background: #FFFFFF;
    border: 2px solid $lightGray;
    border-radius: 8px;
    font-family: $font-body;
    margin-top: 8px;
    font-size: 14px;
    outline: none;

    &:active {
      border: 2px solid $darkBlue;
    }
  }
  .rsvp-button {
    @extend .application-button
  }
  .rsvp-button-selected {
    @extend .rsvp-button;
    border: 2px solid $green;
  }

  .submit {
      outline: none;
      border: 2px solid $pink;
      border-radius: 8px;
      padding: 9px 12px;
      background: $pink;
      color: #fff;
      font-family: $font-body;
      cursor: pointer;
      font-size: 14px;
      transition: .2s;

      &:hover {
        transform: translateY(-2px);
        transition: .2s;
        // background: $pink;
        // color: #fff;
        box-shadow: 0 7px 14px rgba(50,50,93,.1), 0 3px 6px rgba(0,0,0,.08);
      }
  }

  .row {
    margin-bottom: 32px;
  }

  .opt-out-button {
    width: 100%;
    outline: none;
    border: 2px solid $lightGray;
    border-bottom-left-radius: 8px;
    border-bottom-right-radius: 8px;
    padding: 8px;
    background: #fff;
    border-top: none;
    font-family: $font-body;
    cursor: pointer;
    color: $lightGray;

    &:hover {
      color: $darkBlue;
    }
  }
  .opt-in-button {
    width: 100%;
    outline: none;
    border: 2px solid $pink;
    border-radius: 8px;
    padding: 8px;
    color: $pink;
    background: #fff;
    font-family: $font-body;
    cursor: pointer;
    font-size: 14px;
    margin-top: 8px;
  }
}

.Select-control {
  height: 50px;
  width: 100%;
  box-sizing: border-box;
  outline: none;
  border-radius: 8px;
  border: 2px solid $lightGray;
  margin-top: 8px;

  input:active {
    border: none;
  }
  /* Make select elements 50px tall: https://github.com/JedWatson/react-select/issues/1322#issuecomment-259399147 */
  .Select-placeholder {
    line-height: 46px;
  }

  .Select-value {
    line-height: 46px !important;

    .Select-value-label {
      line-height: 46px;
    }
  }

  .Select-input {
    height: 46px;
  }
}

/* The switch - the box around the slider */
.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
  margin-top: 8px;
}

/* Hide default HTML checkbox */
.switch input {display:none;}

/* The slider */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: $lightGray;
  -webkit-transition: .4s;
  transition: .4s;
  border-radius: 34px;
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
  border-radius: 50%;
}

input:checked + .slider {
  background-color: #F3027E;
}

input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}


@media (max-width: 768px) {
  h1 {
    text-align: center;
  }
  .col-6 {
    width: 100%;

    &:first-child {
      padding-right: 0px !important;
      margin-bottom: 16px;
    }
    &:last-child {
      padding-left: 0px;
    }
  }
}

.checkbox {
  label {
      display: inline-block; // to make it easier to click
      color: $darkBlue;
      cursor: pointer;
      position: relative; // important

      // Now we'll create the checkbox object

      span {
        display: inline-block;
        position: relative;
        background-color: transparent;
        width: 25px;
        height: 25px;
        transform-origin: center;
        border: 2px solid $darkBlue;
        border-radius: 50%;
        vertical-align: -6px;
        margin-right: 10px;
        transition: background-color 150ms 200ms, transform 350ms cubic-bezier(.78,-1.22,.17,1.89); // custom ease effect for bouncy animation

    // Now we'll create the "tick" using pseudo elements - those will be basically two lines that will be rotated to form the "tick"

      &:before {
        content: "";
        width: 0px;
        height: 2px;
        border-radius: 2px; // so that the tick has nice rounded look
        background: $darkBlue;
        position: absolute;
        transform: rotate(45deg);
        top: 13px; // you'll need to experiment with placement depending on the dimensions you've chosen
        left: 9px; // you'll need to experiment with placement depending on the dimensions you've chosen
        transition: width 50ms ease 50ms;
        transform-origin: 0% 0%;
      }

      &:after {
        content: "";
        width: 0;
        height: 2px;
        border-radius: 2px; // so that the tick has nice rounded look
        background: $darkBlue;
        position: absolute;
        transform: rotate(305deg);
        top: 16px; // you'll need to experiment with placement depending on the dimensions you've chosen
        left: 10px; // you'll need to experiment with placement depending on the dimensions you've chosen
        transition: width 50ms ease;
        transform-origin: 0% 0%;
      }
    }
    // Time to add some life to it

    &:hover {
      span {
        &:before {
          width: 5px;
          transition: width 100ms ease;
        }

        &:after {
          width: 10px;
          transition: width 150ms ease 100ms;
        }
      }
    }
  }

  input[type="checkbox"] {
      display: none; // hide the system checkbox

    // Let's add some effects after the checkbox is checked

    &:checked {
      + label {
        span {
          background-color: $pink;
          transform: scale(1.25); // enlarge the box

          &:after {
            width: 10px;
            background: #fff;
            transition: width 150ms ease 100ms; // enlarge the tick
          }

          &:before {
            width: 5px;
            background: #fff;
            transition: width 150ms ease 100ms; // enlarge the tick
          }
        }

        &:hover { // copy the states for onMouseOver to avoid flickering
          span {
            background-color: $pink;
            transform: scale(1.25); // enlarge the box

            &:after {
              width: 10px;
              background: $white;
              transition: width 150ms ease 100ms; // enlarge the tick
            }

            &:before {
              width: 5px;
              background: $white;
              transition: width 150ms ease 100ms; // enlarge the tick
            }
          }
        }
      }
    }
  }
}
.appInfoBanner {
  background: $darkBlue-o;
  border-radius: 15px;
  color: white;
  padding: 20px;
  margin-bottom: 20px;
}
